/* DocIntel
 * Copyright (C) 2018-2021 Belgian Defense, Antoine Cailliau
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using DocIntel.Core.Helpers;
using DocIntel.Core.Models;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Swashbuckle.AspNetCore.Annotations;

namespace DocIntel.WebApp.Areas.API.Models
{
    public class APIFile
    {
        /// <summary>
        /// The file identifier
        /// </summary>
        [JsonProperty("file_id")]
        [SwaggerSchema(ReadOnly = true)]
        public Guid FileId { get; set; }
        
        /// <summary>
        /// The document identifier
        /// </summary>
        [JsonProperty("document_id")]
        public Guid DocumentId { get; set; }
        
        /// <summary>
        /// The title
        /// </summary>
        public string Title { get; set; }
        
        /// <summary>
        /// The mime type of the document
        /// </summary>
        [JsonProperty("mimetype")]
        public string MimeType { get; set; }
        
        /// <summary>
        /// The file date
        /// </summary>
        [JsonProperty("file_date")]
        public DateTime? FileDate { get; set; }
        
        /// <summary>
        /// The URL from which the file was downloaded
        /// </summary>
        [JsonProperty("source_url")]
        public string SourceUrl { get; set; }
        
        /// <summary>
        /// Whether classification is overriden
        /// </summary>
        [JsonProperty("override_classification")]
        public bool? OverrideClassification { get; set; } = false;
        
        /// <summary>
        /// The new classification is any
        /// </summary>
        [JsonProperty("classification_id")]
        public Guid? ClassificationId { get; set; }
        
        /// <summary>
        /// Whether releasable to is overriden
        /// </summary>
        [JsonProperty("override_releasable_to")]
        public bool? OverrideReleasableTo { get; set; } = false;
        
        /// <summary>
        /// The new releasable to is any
        /// </summary>
        [JsonProperty("releasable_to_id")]
        public List<Guid> ReleasableToId { get; set; }
        
        /// <summary>
        /// Whether eye only to is overriden
        /// </summary>
        [JsonProperty("override_eyes_only")]
        public bool? OverrideEyesOnly { get; set; } = false;
        
        /// <summary>
        /// The new eyes only to is any
        /// </summary>
        [JsonProperty("eyes_only_id")]
        public List<Guid> EyesOnlyId { get; set; }
        
        /// <summary>
        /// The meta data
        /// </summary>
        [JsonProperty("metadata")]
        public JObject MetaData { get; set; }
        
        /// <summary>
        /// Whether the file is visible by default
        /// </summary>
        public bool? Visible { get; set; } = true;
        
        /// <summary>
        /// Whether the file preview is available
        /// </summary>
        public bool? Preview { get; set; } = true;
        
        /// <summary>
        /// Whether the file was automatically generated.
        /// </summary>
        [JsonProperty("auto_generated")]
        public bool? AutoGenerated { get; set; } = false;
    }
    
    public class APIFileDetails : APIFile
    {
        
        /// <summary>
        /// The registration date
        /// </summary>
        [JsonProperty("registration_date")]
        public DateTime RegistrationDate { get; set; }
        
        /// <summary>
        /// The modification date
        /// </summary>
        [JsonProperty("modification_date")]
        public DateTime ModificationDate { get; set; }
        
        /// <summary>
        /// The document
        /// </summary>
        public ApiDocument Document { get; set; }
        
        /// <summary>
        /// The user who registered the document
        /// </summary>
        [JsonProperty("registered_by")]
        public APIAppUser RegisteredBy { get; set; }
        
        /// <summary>
        /// The last modifier
        /// </summary>
        [JsonProperty("last_modified_by")]
        public APIAppUser LastModifiedBy { get; set; }
        
        /// <summary>
        /// The classification
        /// </summary>
        public APIClassification Classification { get; set; }
        
        /// <summary>
        /// The releasable to groups
        /// </summary>
        public List<APIGroup> ReleasableTo { get; set; }
        
        /// <summary>
        /// The eyes only groups
        /// </summary>
        public List<APIGroup> EyesOnly { get; set; }
    }
}