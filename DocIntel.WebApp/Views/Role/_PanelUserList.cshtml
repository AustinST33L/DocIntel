@using DocIntel.Core.Authorization.Operations
@model DocIntel.WebApp.ViewModels.RoleViewModel.DetailsViewModel

@if (Model.Role.UserRoles != null)
{
    <div id="panel-source-info" class="panel">
        <div class="panel-hdr">
            <h2>
                Users
                <span class="fw-300">
                    <i>with role '@Model.Role.Name'</i>
                </span>
            </h2>
        </div>
        <div class="panel-container show">
            <div class="panel-content">
                @if (Model.Role.UserRoles.Any())
                {
                    <table class="table table-bordered mb-0">
                        <thead class="thead-light">
                        <tr>
                            <th scope="col">User</th>
                            <th scope="col">Function</th>
                            <th scope="col">Username</th>
                            <th scope="col">Email</th>
                            <th scope="col">Action</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var t in Model.Role.UserRoles)
                        {
                            <tr>
                                <th scope="row">
                                    <a asp-action="Details" asp-route-id="@t.RoleId">@t.User.FriendlyName</a>
                                </th>
                                <td>@t.User.Function</td>
                                <td>@t.User.UserName</td>
                                <td>@t.User.Email</td>
                                <td>
                                    @if ((await AuthorizationService.AuthorizeAsync(User, null, RoleOperations.RemoveRole)).Succeeded)
                                    {
                                        <a asp-action="Removerole" asp-route-userName="@t.User.UserName" asp-route-roleId="@Model.Role.Id">Remove</a>
                                    }
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="color-secondary">No users have this role or you don't have the rights to see these users.</p>
                }
                
                @if ((await AuthorizationService.AuthorizeAsync(User, null, RoleOperations.AddRole)).Succeeded)
                {
                    <form asp-action="AddRole">
                        <input name="RoleId" value="@Model.Role.Id" type="hidden"/>
                        <div class="row mt-3">
                            <div class="col-3">
                                <div class="form-group">
                                    <select name="UserId" class="form-control select2">
                                        @foreach (var user in ViewBag.AllUsers)
                                        {
                                            <option value="@user.Id">@user.FriendlyName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    <button type="submit" id="save-btn" class= "btn btn-pills btn-success waves-effect waves-themed btn-iconified">
                                        <i class="fal fa-plus"></i> Add User
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>
}