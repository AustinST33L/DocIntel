@using DocIntel.Core.Authorization.Operations
@model DocIntel.WebApp.ViewModels.RoleViewModel.DetailsViewModel

@{
    ViewData["Title"] = $"Role '{Model.Role.Name}'";
    var canEdit = (await AuthorizationService.AuthorizeAsync(User, null, RoleOperations.Update)).Succeeded;
    var canDelete = (await AuthorizationService.AuthorizeAsync(User, null, RoleOperations.Delete)).Succeeded;
}

<div class="subheader">
    <h1 class="subheader-title">
        <i class="fal fa-users subheader-icon"></i> Role '@Model.Role.Name'
        <small>@Model.Role.Description</small>
    </h1>
    <div>
        <div class="btn-group">
            @if (canEdit)
            {
                <a asp-action="Edit" asp-route-id="@Model.Role.Id"
                   class= "btn btn-pills btn-primary waves-effect waves-themed">
                    <i class="fal fa-edit mr-1"></i> Edit
                </a>
            }
            @if (canDelete)
            {
                <a asp-action="Delete" asp-route-id="@Model.Role.Id"
                   class= "btn btn-pills btn-primary waves-effect waves-themed">
                    <i class="fal fa-trash mr-1"></i> Delete
                </a>
            }
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        @await Html.PartialAsync("_PanelUserList", Model, new ViewDataDictionary(ViewData))
        @await Html.PartialAsync("_PanelPermissions", Model, new ViewDataDictionary(ViewData))
    </div>
</div>