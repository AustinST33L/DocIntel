@using DocIntel.Core.Authorization.Operations
@model IEnumerable<ImportRuleSet>

@{
    ViewData["Title"] = "Tag rewriting rules";
    var canCreate = (await AuthorizationService.AuthorizeAsync(User, null, ImportRuleOperations.Create)).Succeeded;
}

<div class="subheader">
    <h1 class="subheader-title">
        <i class="fal fa-broom subheader-icon"></i> Tag rewriting rules
        <small>
            Rewriting rules, grouped in rulesets, help keep the tags as you want them.
        </small>
    </h1>
    <div>
        <div class="btn-group">
            @if (canCreate)
            {
                <a asp-action="Create"
                   class= "btn btn-pills btn-primary waves-effect waves-themed">
                    <i class="fal fa-plus mr-1"></i> Create
                </a>
            }
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        @if (Model != null && Model.Any())
        {
            <div id="panel-source-info" class="panel">
                <div class="panel-hdr">
                    <h2>
                        Import Rule Sets
                    </h2>
                </div>
                <div class="panel-container show">
                    <div class="panel-content">
                        <table class="table table-bordered mb-0">
                            <thead class="thead-light">
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">Description</th>
                                <th scope="col">#rules</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var t in Model.OrderBy(_ => _.Position))
                            {
                                <tr>
                                    <th scope="row">
                                        <a asp-action="Details" asp-route-id="@t.ImportRuleSetId">@t.Name</a>
                                    </th>
                                    <td>@t.Description</td>
                                    <td>@t.ImportRules.Count()</td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="panel">
                <div class="panel-container show">
                    <div class="panel-content p-0">
                        <div class="text-center fs-xl m-3 my-6">
                            <i class="fal fa-broom fa-4x opacity-30 color-fusion-30 mb-2"></i><br/>
                            No rewriting rules.<br/>
                            <small>All the tags will be as provided.</small>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>