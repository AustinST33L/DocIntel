@using DocIntel.Core.Authorization.Operations
@model Group

@{
    ViewData["Title"] = $"Group '{Model.Name}'";
    var canEdit = (await AuthorizationService.AuthorizeAsync(User, null, GroupOperations.Update)).Succeeded;
    var canDelete = (await AuthorizationService.AuthorizeAsync(User, null, GroupOperations.Delete)).Succeeded;
}

<div class="subheader">
    <h1 class="subheader-title">
        <i class="fal fa-users subheader-icon"></i> @Model.Name
        @if (Model.Hidden)
        {
            <span class="badge badge-danger ml-1"> Hidden</span>
        }
        @if (Model.ParentGroupId != default)
        {
            <small>
                Subgroup of <a asp-action="Details" asp-route-id="@Model.ParentGroupId">@Model.ParentGroup.Name</a>
            </small>
        }
    </h1>
    <div>
        <div class="btn-group">
            @if (canEdit)
            {
                <a asp-action="Edit" asp-route-id="@Model.GroupId"
                   class="btn btn-primary waves-effect waves-themed">
                    <i class="fal fa-edit mr-1"></i> Edit
                </a>
            }
            @if (canDelete)
            {
                <a asp-action="Delete" asp-route-id="@Model.GroupId"
                   class="btn btn-primary waves-effect waves-themed">
                    <i class="fal fa-trash mr-1"></i> Delete
                </a>
            }
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div id="panel-summary" class="panel">
            <div class="panel-container show">
                <div class="panel-content d-flex">
                    <div>
                        <p class="text-muted mb-0">
                            @if (!string.IsNullOrEmpty(Model.Description))
                            {
                                @Model.Description
                            }
                            else
                            {
                                if (true)
                                {
                                    <a class="text-muted" asp-action="Edit" asp-route-reference="@Model.GroupId">
                                        <i>Add a description...</i>
                                    </a>
                                }
                                else
                                {
                                    <i>No description available</i>
                                }
                            }
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <div id="panel-summary" class="panel">
            <div class="panel-container show">
                <div class="panel-content">
                    <table class="table table-bordered mb-0">
                        <thead class="thead-light">
                        <tr>
                            <th scope="col">User</th>
                            <th scope="col">Function</th>
                            <th scope="col">Username</th>
                            <th scope="col">Email</th>
                            <th scope="col">Action</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var t in Model.Members)
                        {
                            <tr>
                                <th scope="row">
                                    <a asp-action="Details" asp-route-id="@t.GroupId">@t.User.FriendlyName</a>
                                </th>
                                <td>@t.User.Function</td>
                                <td>@t.User.UserName</td>
                                <td>@t.User.Email</td>
                                <td>
                                    <a class="btn btn-xs btn-default waves-effect waves-themed" asp-action="RemoveMember" asp-route-userId="@t.UserId" asp-route-groupId="@Model.GroupId">Remove</a>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>

                    @if ((await AuthorizationService.AuthorizeAsync(User, null, GroupOperations.AddGroupMember)).Succeeded)
                    {
                        <form asp-action="AddMember">
                            <input type="hidden" value="@Model.GroupId" name="GroupId"/>
                            <div class="row mt-3">
                                <div class="col-3">
                                    <div class="form-group">
                                        <select name="UserId" class="form-control select2">
                                            @foreach (var user in ViewBag.AllUsers)
                                            {
                                                <option value="@user.Id">@user.FriendlyName</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="form-group">
                                        <button type="submit" id="save-btn" class="btn btn-success waves-effect waves-themed btn-iconified">
                                            <i class="fal fa-plus"></i> Add User
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>