@using AngleSharp.Common
@model IEnumerable<DocIntel.WebApp.ViewModels.DocumentViewModel.ObservableViewModel>
@{
    Layout = null;
}

@{
    var uuid = Guid.NewGuid().ToString();
}

<table class="table table-striped table-hover" id="observable-editor-@uuid">
    <thead class="thead-light">
    <tr>
        <th scope="col" style="width:40px; white-space: nowrap;" class="text-center pr-0 pl-2">
            <i class="fas fa-radiation" title="The observable should be considered as malicious or harmful"></i>
        </th>
        <th scope="col" style="width:40px; white-space: nowrap;" class="text-center px-0">
            <i class="fas fa-shield-check" title="The observable is a known good and is not malicious nor harmful"></i>
        </th>
        <th scope="col" style="width:5px; white-space: nowrap;">Type</th>
        <th scope="col" style="width:50%;">Observable</th>
        <th scope="col">Tags</th>
    </tr>
    </thead>
    <tbody>
    @{ 
        int i = (int) ViewData["StartIndex"];
    }
    @foreach (var item in Model)
    {
        @Html.EditorFor(m => item, "Observables", "Observables[" + i + "]", new ViewDataDictionary(ViewData))
        i++;
    }
    </tbody>

</table>


<div class="row justify-content-end">
    <div class="col-auto">
        <div class="btn-group btn-group-sm mx-3 mb-3">
            <a class="btn btn-outline-secondary waves-effect waves-themed toggleAll" data-table-target="observable-editor-@uuid" href="#">
                Mark all as malicious <i class="fas fa-radiation ml-1"></i>
            </a>
            <a class="btn btn-outline-secondary waves-effect waves-themed toggleNone" data-table-target="observable-editor-@uuid" href="#">
                Mark none as malicious
            </a>
        </div>
    </div>
</div>
