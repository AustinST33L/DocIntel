@using DocIntel.Core.Authorization.Operations
@model DocIntel.WebApp.ViewModels.DocumentViewModel.DocumentObservablesViewModel
@{
    ViewData["Title"] = $"Edit {Model.Title}";
    var canDownload = (await AuthorizationService.AuthorizeAsync(User, null, DocumentOperations.Download)).Succeeded;
    var canDelete = (await AuthorizationService.AuthorizeAsync(User, null, DocumentOperations.Delete)).Succeeded;
    var canEdit = (await AuthorizationService.AuthorizeAsync(User, null, DocumentOperations.Edit)).Succeeded;
    var canCreateTags = (await AuthorizationService.AuthorizeAsync(User, null, TagOperations.Create)).Succeeded;
    var canCreateSources = (await AuthorizationService.AuthorizeAsync(User, null, SourceOperations.Create)).Succeeded;
}

<form asp-action="EditObservables" method="post" enctype="multipart/form-data">
    <div class="subheader">
        <h1 class="subheader-title">
            <i class="fal fa-file-edit subheader-icon"></i> @Model.Title
        </h1>
        <div>
            <div class="btn-group">
                <a asp-action="Index" asp-controller="File" asp-route-id="@Model.DocumentId"
                   class="btn btn-primary waves-effect waves-themed btn-iconified">
                    <i class="fal fa-file"></i> View Files
                </a>

                <a asp-action="Edit" asp-route-id="@Model.DocumentId"
                   class="btn btn-primary waves-effect waves-themed btn-iconified" id="edit-btn">
                    <i class="fal fa-edit mr-1"></i> Edit
                </a>

                @if (canDelete)
                {
                    <a asp-action="Delete" asp-route-id="@Model.DocumentId" id="delete-btn"
                       class="btn btn-primary waves-effect waves-themed btn-iconified">
                        <i class="fal fa-trash-alt"></i> Delete
                    </a>
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            @{
                var viewDataDictionary = new ViewDataDictionary(ViewData);
                viewDataDictionary.Add("StartIndex", 0);
            }
            
            @{
                var observablesToReview = Model.Observables.Where(o => o.Status != ObservableStatus.Whitelisted);
            }
            @if (observablesToReview.Any())
            {
                <div class="panel">
                    <div class="panel-hdr">
                        <h2>
                            @observablesToReview.Count() @Html.Pluralize("observable", observablesToReview.Count())
                        </h2>
                    </div>
                    <div class="panel-container show">
                        <div class="panel-content p-0">
                            @await Html.PartialAsync("_ObservablesEditor", observablesToReview, viewDataDictionary)
                        </div>
                    </div>
                </div>
            }
            
            <input asp-for="DocumentId" name="DocumentId" class="form-control" type="hidden"/>

            <div class="row">
                @Html.AntiForgeryToken()
                <div class="col-md-12">
                    <button type="submit" id="save-btn" class="btn btn-success waves-effect waves-themed btn-iconified">
                        <i class="fal fa-save"></i> Save
                    </button>
                    <a asp-action="Edit" asp-route-id="@Model.DocumentId" class="ml-3 text-secondary">Cancel</a>
                </div>
            </div>
        </div>


    </div>

</form>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        $(document).ready(function() {
            $(".toggleAll").click(function() {
                $(".check_accepted").not(":disabled").prop("checked", true);
                return false;
            });
            $(".toggleNone").click(function() {
                $(".check_accepted").not(":disabled").prop("checked", false);
                return false;
            });    
        });
    </script>
}
